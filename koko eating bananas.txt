class Solution {
public:
    int minEatingSpeed(vector<int>& piles, int h) {
    long long left = 1;
    long long right = *max_element(piles.begin(), piles.end());
    long long result = right;

    while (left <= right) {
        long long mid = left + (right - left) / 2;

        long long hours = 0;
        for (int bananas : piles) {
            hours += (bananas + mid - 1) / mid; 
        }

        if (hours <= h) {
            result = mid;
            right = mid - 1;
        } else {
            left = mid + 1;
        }
    }

    return static_cast<int>(result);
    }
};